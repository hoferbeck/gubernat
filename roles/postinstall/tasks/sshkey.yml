- name: Create new root ssh key
  ansible.builtin.shell:
    cmd: |
      ssh-keygen -t ed25519 -C "Generated Key after kubernetes-g8s rollout" -f /root/.ssh/kubernetes-g8s -q -N ""
    creates: /root/.ssh/kubernetes-g8s
  register: ssh_key
  when: groups.master[0] in inventory_hostname

- name: Get new public ssh-key into variable
  ansible.builtin.shell:
    cmd: cat /root/.ssh/kubernetes-g8s.pub
  register: ssh_pub_key
  delegate_to: "{{ groups.master[0] }}"

- name: Get new private ssh-key into variable
  ansible.builtin.shell:
    cmd: cat /root/.ssh/kubernetes-g8s
  register: ssh_private_key
  delegate_to: "{{ groups.master[0] }}"

- name: Distribute ssh private key to all
  ansible.builtin.shell:
    cmd: "echo \"{{ ssh_private_key.stdout }}\" > /root/.ssh/kubernetes-g8s"
  when: groups.master[0] not in inventory_hostname

- name: Distribute ssh public key to all
  ansible.builtin.shell:
    cmd: "echo \"{{ ssh_pub_key.stdout }}\" > /root/.ssh/kubernetes-g8s.pub"
  when: groups.master[0] not in inventory_hostname

- name: Distribute ssh config
  ansible.builtin.copy:
    src: roles/postinstall/files/ssh-config
    dest: /root/.ssh/config

- name: Add new ssh public key to authorized_keys
  ansible.builtin.shell:
    cmd: "sed -i -n -e '/Generated Key after kubernetes-g8s rollout/!p' -e '$a{{ ssh_pub_key.stdout }}' /root/.ssh/authorized_keys"

- name: Delete image ssh-key (starting with root@g8s-img) from authorized_keys
  ansible.builtin.command:
    cmd: "sed -i '/root@g8s-img/d' /root/.ssh/authorized_keys"
