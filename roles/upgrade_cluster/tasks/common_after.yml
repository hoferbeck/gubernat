- name: Drain node
  ansible.builtin.command:
    cmd: "kubectl drain {{ ansible_fqdn }} --force --ignore-daemonsets --delete-emptydir-data --disable-eviction"
  delegate_to: "{{ groups.master[0] }}"
  ignore_errors: true

- name: "Install new version of kubectl, kubelet and cri-o"
  ansible.builtin.yum:
    name:
    - kubelet-{{ k8s_version }}
    - kubectl-{{ k8s_version }}
    - cri-o-{{ crio_version }}
    disable_excludes: all
    state: present
  register: k8s_dnf_update

- name: Restart kubelet
  ansible.builtin.systemd:
    state: restarted
    name: kubelet
  when: k8s_dnf_update is changed 

- name: Restart cri-o
  ansible.builtin.systemd:
    state: restarted
    name: cri-o
  when: k8s_dnf_update is changed 

- name: Upgrade OS
  block:
  - name: Bring system to newest software level
    ansible.builtin.dnf:
      name: "*"
      state: latest

  - name: Check if a reboot is required
    ansible.builtin.command: needs-restarting -r
    register: reboot_required
    failed_when: false

  - name: Reboot the server if required
    ansible.builtin.reboot:
      msg: "Rebooting after updates"
    when: reboot_required.rc != 0
  when: upgrade_os is true

- name: Wait for sure until node is ready again (3 minutes)
  ansible.builtin.pause:
    minutes: 3

- name: Uncordon node
  ansible.builtin.command:
    cmd: "kubectl uncordon {{ ansible_fqdn }}"
  delegate_to: "{{ groups.master[0] }}"
